akka {
  actor {
    provider = "cluster"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = ${clusterPort}
    }
  }
  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"
    ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    //auto-down-unreachable-after = 10s
  }
}

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off

akka.extensions=["akka.cluster.pubsub.DistributedPubSub"]

#akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native

akka.cluster.jmx.multi-mbeans-in-same-jvm = on

akka.cluster.pub-sub {
  # Actor name of the mediator actor, /system/distributedPubSubMediator
  name = distributedPubSubMediator

  # Start the mediator on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""

  # The routing logic to use for 'Send'
  # Possible values: random, round-robin, broadcast
  routing-logic = random

  # How often the DistributedPubSubMediator should send out gossip information
  gossip-interval = 1s

  # Removed entries are pruned after this duration
  removed-time-to-live = 5s

  # Maximum number of elements to transfer in one message when synchronizing the registries.
  # Next chunk will be transferred in next round of gossip.
  max-delta-elements = 3000

  # The id of the dispatcher to use for DistributedPubSubMediator actors.
  # If not specified default dispatcher is used.
  # If specified you need to define the settings of the actual dispatcher.
  use-dispatcher = ""
}

systemName = ${systemName}
address ="akka.tcp://NSkyEye@"${clusterAddr}":"${clusterPort}
appUrl=${appUrl}
appPort=${appPort}
appConfigFileName=${appConfigFileName}
httpConfigFileName=${httpConfigFileName}

neo4j_url="bolt://"${neo4j_url}
neo4j_userName=${neo4j_userName}
neo4j_password=${neo4j_password}
neo4j_maxSession=${neo4j_maxSession}

KAFKA_ServiceSize=${KAFKA_ServiceSize}
KAFKA_BROKERS=${KAFKA_BROKERS}":"${KAFKA_BROKERS_PORT}
KAFKA_TOPIC=${KAFKA_TOPIC}

kpi_url="http://"${kpi_url}


//akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
//akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
//
//akka.persistence.journal.leveldb.dir = "target/example/journal"
//akka.persistence.snapshot-store.local.dir = "target/example/snapshots"
//
//# DO NOT USE THIS IN PRODUCTION !!!
//# See also https://github.com/typesafehub/activator/issues/287
//akka.persistence.journal.leveldb.native = false

akka.http.server.remote-address-header = on

include "akka_system.properties"
//include "httpModel"